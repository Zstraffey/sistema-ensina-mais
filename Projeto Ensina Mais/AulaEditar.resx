<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA9QAAAPUCAYAAABM1HGEAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAkC
        zAAJAswBHVzBzwAAAAd0SU1FB+cCDBchNTTGCXcAACX8SURBVHhe7d2Js6Zleedxu+lmE5AdlE0QRUQU
        lzhmhriMo4MKwUQlKmrFDSPinhnXSaKTGCXuC1GIRg0YtXQkIlruS9xIBDMVVDRKQGQMssjSdAPdjfO7
        3rqfKqrmHsJyznme95zPp+r7H1x31XO977PcAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFiu9t1336HVaW3aSpIkSdKS
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAwKj23XffodVpy7Rt2jHtmnaTJEmStKTVtfgdU12b1zX67HodGNlw
        GNOatHs6LB2dXpT+In0onZG+nL6ZviVJkiRpyapr8LoW/3T6m/SW9LL0u+n+ac+0NlmyYSkMhy1tl+6b
        npXem+rAXpTWpc3p15IkSZIm143p2nRxOiu9Lz03PSDtkCzXsJCGQ5Xq16uD0/Hp9HRhuiH1DqokSZKk
        +Whj+nk6M7043SdtlSzXcFsNByjVMxcPS+9MP06WaEmSJGl5timdn05Jj0rbJ4s13FLDgUnbpP+STk2X
        pN6BkyRJkrQ8uyx9ND0m1Z9sFmu4Oe2QbJHqJQXvSRZpSZIkaWV3efpgenCqFxK37QGYqUPRqs9bvSTV
        rd31woLegZIkSZK08rogvTrdOc32B1jx2mFYlR6UPpk2pN4BkiRJkrSyuz59Nj001Z2tbauAFagOQKpn
        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
        atsD8P+oA9KqZ6sfnj6QarH2j7UkSZK0cqpF+iPpiLRtmu0JwC0wHJh2eH4rvT3VreC+XS1JkiQtzzam
        euHYX6ZHpO2SRRpuq+EApbXpoPTc9In0r6leStA7iJIkSZLmo/rD7GfpU+kF6ZC0ZbJIw0IaDlWq1+Mf
        mn4/nZT+Pl2YrkmbU++gSpIkSRq3ulZfly5K30onp2en+6XtkyUalko7cPVigl3TfdKR6YT0hvT+dHr6
        QvpaqgMrSZIkaWmqa/C6Fv+7VO9FOjG9MB2dDku7p9lLxipgZMNhTPVd67pFfJu0Q9o57SZJkiRpyapr
        8LoWr2vyujava3TLMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwHJ0hzv8X9PsmQ+14/I7AAAAAElFTkSuQmCC
</value>
  </data>
</root>